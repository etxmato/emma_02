<html>
<title>Emma 02</title>
<body>
<h1>Emma 02</h1>
<p>
The Emma 02 emulator is able to emulate multiple computers all based on the <a href="Main1802.htm">RCA 1802</a> microprocessor. Additional information can be found on the <a href="http://www.emma02.hobby-site.com">Emma 02</a> site.
</p>
<p>
The GUI includes different tabs, to switch between these select the desired tab (highlighted in yellow) as shown in screenshot below.
</p>
<p>
<IMG SRC="images/main_tab.png" BORDER="0">
</p>
<p>
The sections below describe the fucntion of each tab. 
</p>
<p>
See section <a href="GeneralMain.htm">General</a> for:
</p>
<p>
<ul>
<li><a href="Main1802.htm">The RCA 1802</a>
<li><a href="FaqMain.htm">FAQ</a>
<li><a href="Main1802.htm">The RCA 1802</a>
<li><a href="MenuMain.htm">Global Settings & Menu</a>
<li><a href="MainFile.htm">Directory and File Structure</a>
<li><a href="MainConfigurations.htm">Configuration</a>
<li><a href="MachineCodeSyntax.htm">Machine Code Syntax</a>
<li><a href="PseudoCodeSyntax.htm">Pseudo Code Syntax</a>
<li><a href="XMLCodeSyntax.htm">XML Code Syntax</a>
</ul>
</p>
<h2><a href="ComputerMain.htm">Computer</a></h2>
<p>
The main tab where the emulated computer can be configured (by selecting pre-configured XML files), adjusted, controlled and started.
</p>
<h2><a href="DirectMain.htm">Direct Assembler</a></h2>
<p>
A powerful assembler and disassembler, which depending on the running computer handles any 180x related code (SYSTEM00, 1801, 1802, 1804 and 1805/1806) as well as multiple pseudo code variants (Chip-8, Super-chip, ST2, ST4 etc.). See also the <a href="SyntaxMain.htm">Syntax</a> section for specification of the accepted syntax. 
</p>
<p>
The assembler can be used for writing anything from small pieces of software to larger projects. The complete COMX Super Board FW was written using the Emma 02 assembler. 
</p>
<p>
The Direct Assembler is very powerful for debugging and patching existing code. See also the <a href="DirectExistingCode.htm">Debugging Existing Code - Example</a> for a short 'how-to'.
</p>
<p>
<h2><a href="ProfilerMain.htm">Profiler</a></h2>
<p>
Main purpose of the Profiler is to find hot code spots, dead code, analyse code & test coverage as well as analyse timing for the running computer and CPU. 
</p>
<h2><a href="DumpMain.htm">Memory Dump</a></h2>
<p>
The Memory Dump shows an overview of one page (256 bytes) of memory, shown in hexadecimal format. Next to options to show regular and video memory it is also possible to show what type of memory (RAM, ROM, video etc) is connect or see an overview of the profile counters.
</p>
<h2><a href="DebuggerMain.htm">Debugger</a></h2>
<p>
The debugger will (among other things) allow you to trace code, set break points or check specific register values. Two debugger tabs are available one for the <a href="DebuggerTrace.htm">1802</a> and one for <a href="DebuggerChip8.htm">pseudo</a> code.
</p>
</body>
</html>