 ...
 ...NAME: MEM
 ...DATE: 11/29/83
 ...PROGRAM NUMBER: SU.MS.SO(1.0)
 ...DESCRIPTION:
 .....MEM.SR PROGRAM.....
 .....AN ASSEMBLY LANGUAGE PROGRAM CALLED
 ....."MEM.SR" IS PROVIDED ON THE SYSTEM DISKETTE.
 .....ONCE ASSEMBLED BY THE USER, IT MAY AT ANY
 .....LATER TIME BE LOADED INTO MEMORY TO
 .....FACILITATE THE SAVING OF ANY AREA OF
 .....MEMORY ONTO A DISK. A MEMORY SAVE FILE
 .....THUS CREATED MAY LATER BE RELOADED INTO MEMORY.
 .....MEM.CM AS PROVIDED WILL RESIDE IN MEMORY FROM
 .....FB2DH TO FFFFH. IT IS ONLY NECESSARY TO
 .....CHANGE THE FIRST ORG STATEMENT TO RELOACTE
 .....THIS PROGRAM IN MEMORY.
 ...............................................

CALLZ EQU 4
ST EQU 002H  ..REG-2 IS USED AS STACK POINTER
ADDR EQU 008H; ..REG-8 CONTAINS THE ENDING ADDRESS
CHAR EQU 00FH; ..REG-F.1 CONTAINS THE OUTPUT BYTES
DATAPR EQU 007H; ..REG-7 POINTS TO MEMORY ADDRESS OF DATA
PC EQU 003H;  ..REG-3 IS PROGRAM COUNTER
RET EQU 005H;  ..REG-5 IS RETURN ROUTINE POINTER
MP EQU 006H;  ..REG-6 IS TEMPORARY ADDRESS STORAGE
DELAY EQU 00CH;  ..UT2-DELAY POINTER
PTER EQU 00CH; ..REG-C IS DCB POINTER
DEV5 EQU 4
DEV6 EQU 5
READAH EQU 0813BH
TYPEU EQU 081A4H;
WRITE EQU 08500H
TRNFR1 EQU 08504H
WAIT EQU 08506H
TYPEX EQU 083F0H
INITIA EQU 083F6H
GOUT20 EQU 083F9H
UCALL EQU 0B453H
KEYIN EQU 012H
PFNAM EQU 024H
UCLX EQU 0B447H
TMPRG1 EQU 00EH
TYPE EQU 014H
OPEN EQU 0
IOCSTA EQU 1
CDERR EQU 028H
PUTCHR EQU 00EH
CLOSE EQU 2
CDENT EQU 01EH
IOCFDF EQU 24
IOCSBS EQU 5
IOCGDW EQU 31
IOCLUN EQU 11
TMPRG3 EQU 00CH
SPACE EQU 020H
RETREG EQU 005H
CBUFP EQU 09090H
SECBUF EQU 512
RTEMP EQU 09
TMPRG2 EQU 00DH
TMPRG4 EQU 00BH
IOCMLS EQU 12
OPTDLM EQU ';'
IOCBRG EQU 00FH
SYSFN EQU 091A8H
GETCHR EQU 8
CDERST EQU 09DDEH
IOCSBP EQU 9
TMPRG5 EQU 00AH
PUTLS EQU 010H
IOCRIB EQU 22
IOCPSN EQU 3
DREAD EQU 01AH
RIBLB EQU 500
DWRIT EQU 01CH
 ....................................................

        ORG 0FB2DH

SETRG   LDI 000H  ..SET DATAPR TO POINT
        PHI DATAPR   ...TO MEMORY LOCATION #0000
        PLO DATAPR
        PLO RA
        LDI A.1(STARTA)  ..SET PC TO POINT TO STARTA
        PHI PC
        LDI A.0(STARTA)
        PLO PC
        SEP     R3
STARTA  SEP CALLZ
        DC (TYPEX)
        DC 00A0DH
        DC 'MEMORY'
        DC 020H
        DC 'SAVE'
        DC 020H
        DC 'PROGRAM'
        DC 00D0AH
        DC 'FIRST'
        DC 020H
        DC 'ADDR'
        DC 03F20H,000H
        0->RD.0;->RD.1
INPUT   SEP CALLZ ..READ IN GIVEN ADDR
        DC (READAH)  ...FROM TERMINAL
        SEP DELAY
        DC 010H
        GHI CHAR ..CHECK INPUT CHAR
        XRI 00DH  ..IF 'CR' GO TO LAB1
        BNZ INPUT
LAB1    GLO RD
        PLO DATAPR
        GHI RD
        PHI DATAPR
        SEP CALLZ
        DC (TYPEX)
        DC 0D0AH
        DC 'LAST'
        DC 020H
        DC 'ADDR'
        DC 03F20H,000H
        0->RD.0;->RD.1
INPUTZ  SEP CALLZ ..READ IN GIVEN ADDR
        DC (READAH)  ...FROM TERMINAL
        SEP DELAY
        DC 010H
        GHI CHAR ..CHECK INPUT CHAR
        XRI 00DH  ..IF 'CR' GO TO LAB1
        BNZ INPUTZ
        GLO RD
        PLO RTEMP
        GHI RD
        PHI RTEMP
        DATAPR.0->@R2
        RTEMP.0-@->ADDR.0
        DATAPR.1->@R2
        RTEMP.1-"@->ADDR.1
        RC.1->@-
        RC.0->@-
        RE.1->@-
        RE.0->@-
REINP   IRX
        @!->RE.0
        @!->RE.1
        @!->RC.0
        @->RC.1
        DEC     R2
        DEC     R2
        DEC     R2
        DEC     R2
        SEP CALLZ
        DC (TYPEX)
        DC 00D0AH
        DC 'WRITE'
        DC 03F20H,000H
        CALL    IOCBIN          ..INITIALIZE IOCBWT
        CALL    PACKIN  ..INITIALIZE PFNAM PACKET
        CALL    UCALL
        DC KEYIN
        DC (LINEBF)
        DC 20
        CALL    UCALL
        DC PFNAM
        DC (PACKET)
        A.1(UCLX+11)->TMPRG1.1  ..TEST PFNAM STATUS
        A.0(UCLX+11)->TMPRG1.0
        @TMPRG1
        LBZ     OPEN10
        CALL    UCALL
        DC TYPE
        DC (SYNTAX)
        LBR     REINP
OPEN10  R7.1->@-
        R7.0->@-
        R8.1->@-
        R8.0->@-
        CALL    UCALL
        DC OPEN
        DC (IOCBWT)
        INC     R2
        @!->R8.0
        @!->R8.1
        @!->R7.0
        @->R7.1
        A.1(IOCBWT+IOCSTA)->TMPRG1.1
        A.0(IOCBWT+IOCSTA)->TMPRG1.0
        @TMPRG1
        LBZ     STARTZ
        CALL    UCALL
        DC CDERR
        DC (IOCBWT)
        LBR     REINP
STARTZ  IRX
        @!->RE.0
        @!->RE.1
        @!->RC.0
        @->RC.1
        SEP CALLZ
        DC (WRITEX)
        DC 00D0AH,0214DH,00D0AH,0FFH
        INC ADDR
        LBR WRTD2B
CKEND   GLO ADDR
        LBNZ WRTD2
        GHI ADDR
        LBZ FINISH
WRTD2   GLO DATAPR ..CHECK IF 32 PAIRS OF DATA
        ANI 01FH   ..ARE PRINTED IN ONE LINE
        BNZ WRTD1  ..GO TO WRTD3 IF NOT
        SEP CALLZ  ..CALL SUB WRITEX
        DC (WRITEX)  ..TO WRITE ';' 'CR' 'LF'
        DC 03B0DH,00AFFH
WRTD2B  SEP CALLZ  ..CALL SUB WRTH TO WRITE
        DC (WRTH)  ..HEADING
WRTD1   SEX DATAPR  ..SET X TO DATAPR
        LDXA  ..LOAD DATA TO D
        PHI RA  ..PUT DATA IN RF.1
WRTD3   SEP CALLZ
        DC (ASCII)  ..WRITE THE DATA TO DISK
        DEC ADDR
        LBR CKEND   ..CHECK IF END
ERROR   SEP CALLZ  ..TYPE OUT ERROR MESSAGE
        DC (TYPEX)  ...'E'
        DC 00D0AH,0450DH,000H
        LBR STARTA
FINISH  SEP CALLZ ..AT END TYPE OUT
        DC (WRITEX)   ...'CR','LF','*','DC3'
        DC 00D0AH,013FFH ...' '

CKBFR   CALL    UCALL
        DC PUTLS
        DC (IOCBWT)
        A.1(IOCBWT+IOCSTA)->TMPRG1.1
        A.0(IOCBWT+IOCSTA)->TMPRG1.0
        @TMPRG1
        LBZ     MEM10
        CALL    UCALL
        DC CDERR
        DC (IOCBWT)
        LBR     LEAVE

MEM10   CALL    UCALL
        DC CLOSE
        DC (IOCBWT)
        A.1(IOCBWT+IOCSTA)->TMPRG1.1
        A.0(IOCBWT+IOCSTA)->TMPRG1.0
        @TMPRG1
        LBZ     LEAVE
        CALL    UCALL
        DC CDERR
        DC (IOCBWT)

LEAVE   CALL    UCALL
        DC CDENT             ..RETURN TO OP SYSTEM

 ..........SUBROUTINES..........
WRITER  SEP RET ..RETURN
WRITEX  LDA MP
        PHI CHAR
        XRI 0FFH..IF IT EQ #FF GO TO
        BZ WRITER ...WRITER
        SEX R2
        R7.1->@-
        R7.0->@-
        R8.1->@-
        R8.0->@-

        CALL    UCALL
        DC PUTCHR
        DC (IOCBWT)
        A.1(IOCBWT+IOCSTA)->TMPRG1.1
        A.0(IOCBWT+IOCSTA)->TMPRG1.0
        @TMPRG1
        LBZ     MEM20
        CALL    UCALL
        DC CDERR
        DC (IOCBWT)
        LBR     LEAVE

MEM20   INC     R2
        @!->R8.0
        @!->R8.1
        @!->R7.0
        @->R7.1
        BR WRITEX
WRTHR   SEP RET
WRTH    GHI DATAPR ..WRITE ADDRESS
        PHI RA
        SEP CALLZ
        DC (ASCII)
        GLO DATAPR
        PHI RA
        SEP CALLZ
        DC (ASCII)
        SEP CALLZ  ..WRITE SPACE
        DC (WRITEX)
        DC 020FFH
        LBR WRTHR
ASCIIR  SEP RET
ASCII   SEP CALLZ  ..CALL SUB CONVA
        DC (CONVA)  ..TO CONVERT HEX INTO ASCII
        GHI RB  ..LOAD THE CONVERTED
        PHI CHAR  ..BYTE INTO RF.1
        R7.1->@-
        R7.0->@-
        R8.1->@-
        R8.0->@-

        CALL    UCALL
        DC PUTCHR
        DC (IOCBWT)
        A.1(IOCBWT+IOCSTA)->TMPRG1.1
        A.0(IOCBWT+IOCSTA)->TMPRG1.0
        @TMPRG1
        LBZ     MEM30
        CALL    UCALL
        DC CDERR
        DC (IOCBWT)
        LBR     LEAVE

MEM30   GLO RB
        PHI CHAR

        CALL    UCALL
        DC PUTCHR
        DC (IOCBWT)
        A.1(IOCBWT+IOCSTA)->TMPRG1.1
        A.0(IOCBWT+IOCSTA)->TMPRG1.0
        @TMPRG1
        LBZ     MEM40
        CALL    UCALL
        DC CDERR
        DC (IOCBWT)
        LBR     LEAVE

MEM40   INC     R2
        @!->R8.0
        @!->R8.1
        @!->R7.0
        @->R7.1
        LBR ASCIIR  ..RETURN
CONVR   SEP RET
CONVA   GHI RA  ..GET THE HIGH HALF OFBYTE
        SHR  ...CHECK IF IT IS GE.0A
        SHR  ...' '
        SHR  ...' '
        SHR  ...' '
        SMI 00AH ..IF SO GO TO STEP1
        LBNF STEP2  ..ELSE GO TO STEP2
STEP1   ADI 041H  ..ADD #41 TO GET THE ASCII FORM
        PHI RB  ..SAVE IN RB.1
        BR STEP3
STEP2   ADI 03AH  ..ADD #3A TO GET THE ASCII FORM
        PHI RB  ..SAVE IN RB.1
STEP3   GHI RA  ..GET LOWER HALF OF
        ANI 00FH  ..THE BYTE
        SMI 00AH  ..CHECK IF IT IS GE.0A
        BNF STEP5  ..IF NOT GO TO STEP5
STEP4   ADI 041H  ..ADD #41 TO GET THE ASCII FORM
        PLO RB  ..SAVE IN RB.0
        LBR CONVR
STEP5   ADI 03AH
        PLO RB
        LBR CONVR
CALR    DS  003H
DCB     ORG  $    ..ENTRY OF DCB AREA
 ..              IOCB INITIALIZATION
IOCBIN  A.1(IOCBWT+IOCFDF)->TMPRG1.1
        A.0(IOCBWT+IOCFDF)->TMPRG1.0
        2->@TMPRG1
        A.1(IOCBWT)->TMPRG1.1
        A.0(IOCBWT)->TMPRG1.0
        072H->@TMPRG1
        A.1(IOCBWT+IOCSBS)->TMPRG1.1
        A.0(IOCBWT+IOCSBS)->TMPRG1.0
        A.1(OUTBUF)->@TMPRG1
        INC     TMPRG1
        A.0(OUTBUF)->@TMPRG1
        INC     TMPRG1
        A.1(OUTBUF+SECBUF-1)->@TMPRG1
        INC     TMPRG1
        A.0(OUTBUF+SECBUF-1)->@TMPRG1
        INC     TMPRG1
        0->@TMPRG1
        INC     TMPRG1
        ->@TMPRG1
        A.1(IOCBWT+IOCGDW)->TMPRG1.1
        A.0(IOCBWT+IOCGDW)->TMPRG1.0
        'D'->@TMPRG1
        INC     TMPRG1
        'K'->@TMPRG1
        A.1(IOCBWT+IOCLUN)->TMPRG1.1
        A.0(IOCBWT+IOCLUN)->TMPRG1.0
        0->@TMPRG1
        INC     TMPRG1
        9->TMPRG3.0
LOOP    SPACE->@TMPRG1
        INC     TMPRG1
        DEC     TMPRG3
        TMPRG3.0
        LBNZ    LOOP
        SEP     RETREG
 ..     PACKET INITIALIZATION
PACKIN  A.1(PACKET)->TMPRG1.1
        A.0(PACKET)->TMPRG1.0
        A.1(LINEBF)->@TMPRG1
        INC     TMPRG1
        A.0(LINEBF)->@TMPRG1
        INC     TMPRG1
        A.1(IOCBWT+IOCLUN)->@TMPRG1
        INC     TMPRG1
        A.0(IOCBWT+IOCLUN)->@TMPRG1
        SEP     RETREG
SYNTAX
        DC 00D0AH
        DC 'SYNTAX ERROR'
        DC 00D0AH,000H
OUTBUF  DS      SECBUF        ..OUTPUT SECTOR BUFFER
IOCBWT  DS      36            ..OUTPUT IOCB
PACKET  DS      4             ..PFNAM PACKET
LINEBF  DS      20            ..INPUT LINE BUFFER

        END

 (LINEBF)->@TMPRG1
        INC     TMPRG1
        A.0(LINEBF)->@TMPRG1
        INC     TMPRG1
        A.1(IOCBWT+IOCLUN)->@TMPRG1
        INC     TMPRG1
        A.0(IOCBWT+IOCLUN)->@TMPRG1
        SEP     RETREG
SYNTAX
        DC 00D0AH
        DC 'SYNTAX ERROR'
        DC 00