	..  PROGRAM 7.6	-- TV DIGITAL CLOCK
	..
0000 90	  REST:	GHI 0	  .. INITIALIZE R1, R2, R3
0001 B1		PHI 1
0002 B2		PHI 2
0003 B3		PHI 3
0004 F81B	LDI INTS  .. R1 = INTERRUPT PC
0006 A1		PLO 1
0007 F8FF	LDI #FF	  .. R2 = STACK
0009 A2		PLO 2
000A F80F	LDI MAIN  .. R3 = MAIN PC
000C A3		PLO 3
000D 70		RET	  .. X=0!
000E 23		#23	  .. SET X=2, P=3
000F 69	  MAIN:	INP 1	  .. TURN ON TV
0010 30AC	BR TEST	  .. DO DIAGNOSTIC
0012	..
0012	..  DISPLAY REFRESH
0012	..
0012 12	  DONE:	INC 2	  .. ASSUME X=2!
0013 42		LDA 2	  .. RESTORE DF
0014 F6		SHR
0015 42		LDA 2	  .. RESTORE R7
0016 B7		PHI 7
0017 42		LDA 2
0018 A7		PLO 7
0019 42		LDA 2	  .. NOW D
001A 70		RET	  .. RESTORE X AND P
001B C4	  INTS:	NOP	  .. EVEN OUT CYCLES
001C 22		DEC 2	  .. PUSH STACK, TO
001D 78		SAV	  .. SAVE X AND P (IN T)
001E 22		DEC 2
001F 73		STXD	  .. SAVE D
0020 87		GLO 7	  .. SAVE R7
0021 73		STXD
0022 97		GHI 7
0023 73		STXD
0024 7E		SHLC	  .. SAVE DF
0025 73		STXD
0026 F8C8	LDI BUFF  .. SET UP R0
0028 3428	B1  *	  .. WAIT FOR DISPLAY
002A A0	  ROW:	PLO 0
002B		...	  .. DMA HERE
002B A0		PLO 0	  .. RESET R0
002C B7		PHI 7
002D F80B	LDI 11	  .. (RASTER COUNT - 3)/2
002F		...
002F A7		PLO 7
0030 97		GHI 7	  .. KEEP FIXING R0
0031 A0		PLO 0
0032		...
0032 27	  REPT:	DEC 7	  .. COUNTER RASTERS
0033 97		GHI 7
0034 A0		PLO 0
0035		...
0035 A0		PLO 0
0036 87		GLO 7	  .. TWO LINES PER LOOP
0037 3A32	BNZ REPT
0039		...
0039 80		GLO 0	  .. IF LAST TIME,
003A 3C2A	BN1 ROW
003C A0		PLO 0	  .. JUST BLANK IT
003D		...
003D 343C	B1 *-1	  .. (3 LINES)
003F	..
003F	..  SECONDS CLOCK
003F	..
003F 90		GHI 0
0040 B7		PHI 7
0041 F8C7	LDI FRCT  .. POINT TO FRAME COUNT
0043 A7		PLO 7	  .. R7 IS AVAILABLE
0044 07		LDN 7
0045 FC01	ADI 1	  .. BUMP COUNTER
0047 57		STR 7
0048 FF3D	SMI 61	  .. MOD 61
004A 3B12	BNF DONE  .. NOT OVER
004C E7		SEX 7
004D 73		STXD	  .. ROLL OVER
004E F0		LDX	  .. TO SECONDS
004F FC03	ADI 3
0051 57		STR 7
0052 3B69	BNF UNIT  .. GO DISPLAY
0054 F8E2	LDI -30	  .. ROLL OVER
0056 73		STXD
0057 F0		LDX	  .. TO TENS
0058 FC03	ADI 3
005A 57		STR 7
005B FC0C	ADI 12	  .. (OVERFLOW AT 60)
005D 3B62	BNF TENS
005F F8E2	LDI -30	  .. ONE MINUTE!
0061 57		STR 7
0062		...	  .. COULD DO MINUTES, HOURS...
0062 F8C8 TENS:	LDI BUFF  .. POINT TO LEFT DIGIT
0064 306B	BR UNIT+2
0066 F8C6	LDI SECS  .. (POINT TO COUNTER)
0068 A7		PLO 7
0069 F8CC UNIT:	LDI BRIT  .. OR RIGHT DIGIT
006B A0		PLO 0
006C 47		LDA 7	  .. POINT TO DIGITS
006D FCAC	ADI TABL  .. (TABLE OFFSET)
006F A7		PLO 7
0070 47	  DOWN:	LDA 7	  .. GET DOTS
0071 52		STR 2	  .. (SAVE)
0072 E2		SEX 2
0073 F0	  HALF:	LDX	  .. CONVERT A DOT
0074 FE		SHL	  .. FROM A BIT
0075 52		STR 2
0076 75		SDB	  .. =00 IF DF=1, =FF IF DF=0
0077 50		STR 0	  .. STORE INTO BUFFER
0078 10		INC 0
0079 80		GLO 0
007A FA03	ANI 3	  .. DO THIS 4 TIMES
007C 3A73	BNZ HALF  .. (9*4 INSTRUCTIONS)
007E 10		INC 0
007F 10		INC 0
0080 10		INC 0
0081 10		INC 0
0082 F0		LDX	  .. CHECK FOR SECOND 4 BITS
0083 3A73	BNZ HALF  .. ((36+6)*2)
0085 80		GLO 0	  .. REPEAT IF THIS WAS LEFT
0086 FFF8	SMI BEND
0088 3B70	BNF DOWN  .. ((84+6)*3)
008A 3266	BZ UNIT-3 .. ((270+9)*2)
008C 3012	BR DONE	  .. MAX TOTAL <600 INSTRUCTIONS
008E	..
008E	..  DOT TABLE FOR DIGITS
008E	..
008E DAAADF	#DAAADF	  .. 0
0091 D9DD8F	#D9DD8F	  .. 1
0094 9EDB8F	#9EDB8F	  .. 2
0097 9EDE9F	#9EDE9F	  .. 3
009A EAA8EF	#EAA8EF	  .. 4
009D 8B9E9F	#8B9E9F	  .. 5
00A0 CB9ADF	#CB9ADF	  .. 6
00A3 8EDBBF	#8EDBBF   .. 7
00A6 DADADF	#DADADF	  .. 8
00A9 DACEDF	#DACEDF	  .. 9
00AC	TABL=*
00AC	..
00AC	..  MINI DIAGNOSTIC
00AC	..
00AC E7	  TEST:	SEX 7	  .. SET UP R7
00AD A7		PLO 7	  .. AS COUNTER
00AE 3BB1	BNF PLUS
00B0 17		INC 7
00B1 60	  PLUS:	IRX
00B2 7C01	ADCI 1	  .. IN PARALLEL WITH D
00B4 3AB1	BNZ PLUS
00B6 E2		SEX 2	  .. WHEN D=00,
00B7 87		GLO 7	  .. COMPARE THEM:
00B8 22		DEC 2
00B9 52		STR 2
00BA 64		OUT 4	  .. DISPLAY DIFFERENCE
00BB 32BF	BZ *+4	  .. EQUAL CONTINUES,
00BD 3FBD	BN4 *	  .. UNEQUAL WAITS
00BF 37BF	B4  *	  .. WAIT FOR RELEASE
00C1 6C		INP 4	  .. GET NEW COUNT
00C2 FE		SHL	  .. SET DF
00C3 30AC	BR TEST	  .. REPEAT
00C5	..
00C5	..  TIME COUNTERS AND DISPLAY BUFFER
00C5	..
00C5 E2	  STEN:	#E2	  .. MUST INITIALIZE
00C6 E2	  SECS:	#E2
00C7 00	  FRCT:	00
00C8	  BUFF=#C8	  .. EMPTY BUFFER
00CC	  BRIT=#CC
00F8	  BEND=#F8
		END
